---

- name: Download k8s Google Public signing key Ubuntu
  get_url:
    url: "https://pkgs.k8s.io/core:/stable:/v{{ kube_major_minor }}/deb/Release.key"
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    force: true
  when: ansible_facts.distribution_version > '20.04'

- name: Add Kubernetes Google Public signing key to keyring Focal
  get_url:
    url: "https://pkgs.k8s.io/core:/stable:/v{{ kube_major_minor }}/deb/Release.key"
    force: true
    dest: /tmp/kubernetes-apt-keyring
  when: ansible_facts.distribution_version == '20.04'

- name: Convert GPG key from ASCII to binary format
  shell: gpg --batch --yes --dearmor -o /tmp/kubernetes-apt-keyring.gpg /tmp/kubernetes-apt-keyring
  args:
    chdir: /tmp
  register: dearmor_output
  when: ansible_facts.distribution_version == '20.04'

- name: Save the converted GPG key to keyring
  copy:
    src: /tmp/kubernetes-apt-keyring.gpg
    remote_src: true
    dest: /etc/apt/keyrings/
    owner: root
    group: root
    mode: '0644'
  when: dearmor_output.rc == 0 and ansible_facts.distribution_version == '20.04'

- name: Add k8s repo sources file for Ubuntu
  lineinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    create: true
    line: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kube_major_minor }}/deb/ /

- name: Update APT package list
  apt:
    update_cache: yes
  when: ansible_facts.distribution_version == '20.04'

- name: Add k8s repo CentOS
  copy:
    src: redhat_repo
    dest: /etc/yum.repos.d/kubernetes.repo
  when: ansible_facts['distribution'] == "CentOS"

- name: Ensure kubectl completion and alias exist in root's bashrc
    lineinfile:
      path: "/root/.bashrc"
      line: "{{ item }}"
      create: yes
      state: present
    loop:
      - '# Ansible: kubectl bash completion'
      - 'source <(kubectl completion bash)'
      - 'alias k=kubectl'
      - 'complete -o default -F __start_kubectl k'
